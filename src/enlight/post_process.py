############################################
# Project: Enlighten
# File: src\enlighten\post_process.py
# By: ProgrammingIncluded
# Website: ProgrammingIncluded.com
# Description: Crops jpgs generated by convert.py
#############################################

# std
import os
import glob
import argparse

# ext
from matplotlib import image
import numpy as np

IMG_RENDER_FOLDER = "img_render"
IMG_FOLDER = "img_post"

def get_argument_parser(parser=argparse.ArgumentParser(prog="post_process", description="Crops jpgs generated by convert.py")):
    parser.add_argument("--crop-folder-input",
                        help="Input location of raw jpgs (Should be same as --convert-folder-input in convert stage.",
                        default=IMG_RENDER_FOLDER)
    parser.add_argument("--process-output-folder", help="Final output folder of cropped images.", default=IMG_FOLDER)
    return parser

def parse_args():
    return get_argument_parser().parse_args()

def post_process(args):
    if not os.path.exists(args.process_output_folder):
        os.mkdir(args.process_output_folder)

    CUT_OFFSET_PX = 375
    for jpg in glob.glob("{}/*.jpg".format(args.crop_folder_input)):
        img = image.imread(jpg)
        max_y = img.shape[1]
        result = img[:, CUT_OFFSET_PX : max_y - CUT_OFFSET_PX, :]
        img_name = os.path.split(jpg)[-1]
        image.imsave("{}/{}".format(args.process_output_folder, img_name), result)

if __name__ == "__main__":
    # Change CWD to script location
    script_path = os.path.dirname(os.path.abspath(__file__))
    os.chdir(script_path)

    args = parse_args()

    # Render the html into png
    post_process(args)