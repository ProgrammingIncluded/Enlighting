############################################
# Project: Enlighting
# File: enlighten.py
# By: ProgrammingIncluded
# Website: ProgrammingIncluded.com
# Description: Converts a CSV of quotes and names
#     into a folder of images with the quotes in front.
############################################

import os
import sys
import argparse

script_path = os.path.dirname(os.path.abspath(__file__))
sys.path.append(os.path.join(script_path, "src"))

import enlight.render_html as rh
import enlight.convert as con
import enlight.post_process as post

def get_help_output():
    main_parser = argparse.ArgumentParser(description="Converts a CSV of quotes and names into a folder of images with custom quotes.")
    rh_group = main_parser.add_argument_group("render_html", "Renders CSV data into HTML files")
    rh.get_argument_parser(rh_group)

    con_group = main_parser.add_argument_group("convert", "Converts a rendered html into png. Uses Imgkit.")
    con.get_argument_parser(con_group)

    post_group = main_parser.add_argument_group("post_process", "Crops jpgs generated by convert.py")
    post.get_argument_parser(post_group)

    main_parser.parse_args()

def main():
    # Set the CWD to the scripts folder.
    os.chdir(script_path)

    # Since we are only trying to find the help flag, use a basic search
    if "--help" in sys.argv or "-h" in sys.argv:
        get_help_output()
        return

    # Render
    rh_args = rh.parse_args()
    rh.create_output_folder(rh_args)
    rh.gen_blurred_image(rh_args)
    rh.render(rh_args)

    # Convert files
    con_args = con.parse_args()
    con.convert(con_args)

    # Post Process
    post_args = post.parse_args()
    post.post_process(post_args)


if __name__ == "__main__":
    main()